<?php

namespace ContainerK5nHf61;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_UZ8u9MTService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.uZ8u9MT' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.uZ8u9MT'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\TransactionController::depotUser' => ['privates', '.service_locator.raYkoSo', 'get_ServiceLocator_RaYkoSoService', true],
            'App\\Controller\\TransactionController::retraitUser' => ['privates', '.service_locator.NsAIhVr', 'get_ServiceLocator_NsAIhVrService', true],
            'App\\Controller\\UserController::addUser' => ['privates', '.service_locator.E1M71Bm', 'get_ServiceLocator_E1M71BmService', true],
            'App\\Controller\\UserController::addUserAgence' => ['privates', '.service_locator.E1M71Bm', 'get_ServiceLocator_E1M71BmService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel::terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
            'App\\Controller\\TransactionController:depotUser' => ['privates', '.service_locator.raYkoSo', 'get_ServiceLocator_RaYkoSoService', true],
            'App\\Controller\\TransactionController:retraitUser' => ['privates', '.service_locator.NsAIhVr', 'get_ServiceLocator_NsAIhVrService', true],
            'App\\Controller\\UserController:addUser' => ['privates', '.service_locator.E1M71Bm', 'get_ServiceLocator_E1M71BmService', true],
            'App\\Controller\\UserController:addUserAgence' => ['privates', '.service_locator.E1M71Bm', 'get_ServiceLocator_E1M71BmService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.KfbR3DY', 'get_ServiceLocator_KfbR3DYService', true],
            'kernel:terminate' => ['privates', '.service_locator.KfwZsne', 'get_ServiceLocator_KfwZsneService', true],
        ], [
            'App\\Controller\\TransactionController::depotUser' => '?',
            'App\\Controller\\TransactionController::retraitUser' => '?',
            'App\\Controller\\UserController::addUser' => '?',
            'App\\Controller\\UserController::addUserAgence' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\TransactionController:depotUser' => '?',
            'App\\Controller\\TransactionController:retraitUser' => '?',
            'App\\Controller\\UserController:addUser' => '?',
            'App\\Controller\\UserController:addUserAgence' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
